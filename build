#!/usr/bin/bash
set -euo pipefail

__NAME__="${0##*/}"
REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
base_dir="base"
extra_dir="extra"
scr_dir="scr"
bin_dir="/usr/local/bin"

declare -A CFGS

# base
CFGS["$base_dir/foot.ini"]="$HOME/.config/foot/foot.ini"
CFGS["$base_dir/config"]="$HOME/.config/sway/config"
CFGS["$base_dir/init.lua"]="$HOME/.config/nvim/init.lua"
CFGS["$base_dir/config_i3status"]="$HOME/.config/i3status/config"
CFGS["$base_dir/zshrc"]="$HOME/.zshrc"
CFGS["$base_dir/vimrc"]="$HOME/.vimrc"
CFGS["$base_dir/gitconfig"]="$HOME/.gitconfig"
CFGS["$base_dir/tmux.conf"]="$HOME/.tmux.conf"
#mako
#lf

# extra
CFGS["$extra_dir/fstab"]="/etc/fstab"
CFGS["$extra_dir/pacman.conf"]="/etc/pacman.conf"
CFGS["$extra_dir/mkinitcpio.conf"]="/etc/mkinitcpio.conf"
CFGS["$extra_dir/main.conf"]="/etc/iwd/main.conf"
CFGS["$extra_dir/paru.conf"]="/etc/paru.conf"
CFGS["$extra_dir/makepkg.conf"]="/etc/makepkg.conf"
# scr
CFGS["$scr_dir/"]="$bin_dir"

ENABLE_INFO=0

for arg in "$@"; do
  case "$arg" in
    --info|-i)
      ENABLE_INFO=1
      ;;
  esac
done

err() {
  echo -e "\e[1;31m$__NAME__: error: $1\e[0m" >&2
}

info() {
  if [[ $ENABLE_INFO -eq 1 ]]; then
    echo -e "[INFO] $*"
  fi
}

copy_config() {
  local dest_rel="$1"
  local src="$2"
  local dest_abs="$REPO_ROOT/$dest_rel"

  if [[ ! -e "$src" ]]; then
    err "no such file or directory: '$src'"
    return 1
  fi

  if [[ -d "$src" ]] && [[ "$dest_rel" == */ ]]; then
    mkdir -p "$dest_abs"
    rm -rf "${dest_abs:?}/"*
    cp -a "$src/"* "$dest_abs/"
    info "copied directory contents: $src/ -> $dest_abs/"
  elif [[ -d "$src" ]]; then
    rm -rf "$dest_abs"
    cp -a "$src" "$dest_abs"
    info "copied directory: $src -> $dest_abs"
  else
    mkdir -p "$(dirname "$dest_abs")"
    cp -a "$src" "$dest_abs"
    info "copied file: $src -> $dest_abs"
  fi
}

main() {
  for rel_path in "${!CFGS[@]}"; do
    src_path="${CFGS[$rel_path]}"
    copy_config "$rel_path" "$src_path"
  done
}

main "$@"
